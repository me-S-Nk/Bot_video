import os
import re
import asyncio
from telegram import Update
from telegram.ext import ContextTypes
from downloader.tiktok import download_tiktok
from downloader.instagram import download_instagram
from utils.spam_protection import is_spam

LINK_PATTERNS = {
    "tiktok": r"(https?://)?(www\.)?(tiktok\.com|tiktok\.app\.link|vm\.tiktok\.com)",
    "instagram": r"(https?://)?(www\.)?instagram\.com/(reel|p)/"
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –∏–∑ TikTok –∏–ª–∏ Instagram.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.strip()

    if is_spam(user_id):
        await update.message.reply_text("üö´ –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Å—Å—ã–ª–∫–æ–π.")
        return

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å—Å—ã–ª–∫–∏ —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
    video_type = None
    for platform, pattern in LINK_PATTERNS.items():
        if re.search(pattern, text, re.IGNORECASE):
            video_type = platform
            break

    if not video_type:
        await update.message.reply_text("‚ùó –û—Ç–ø—Ä–∞–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –∏–∑ TikTok –∏–ª–∏ Instagram.")
        return

    try:
        await update.message.reply_text(f"‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ —Å {video_type.capitalize()}...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        download_func = download_tiktok if video_type == "tiktok" else download_instagram
        file_path = await asyncio.wait_for(
            asyncio.to_thread(download_func, text),
            timeout=180  # 3 –º–∏–Ω—É—Ç—ã –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
        )

        if file_path and os.path.exists(file_path):
            try:
                with open(file_path, "rb") as video:
                    await update.message.reply_video(
                        video=video,
                        supports_streaming=True,
                        read_timeout=60,
                        write_timeout=60
                    )
            except Exception as e:
                print(f"[Send Error] {e}")
                await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ.")
            finally:
                os.remove(file_path)
        else:
            await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ. –ü—Ä–æ–≤–µ—Ä—å —Å—Å—ã–ª–∫—É.")
            
    except asyncio.TimeoutError:
        await update.message.reply_text("‚åõ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
    except Exception as e:
        print(f"[General Error] {e}")
        await update.message.reply_text("üöß –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")